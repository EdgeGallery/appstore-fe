/*
 *  Copyright 2020 Huawei Technologies Co., Ltd.
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

import enLocale from 'element-ui/lib/locale/lang/en'
const en = {
  nav: {
    home: 'Home Page',
    store: 'Store',
    docs: 'Docs',
    myApp: 'My App',
    about: 'About',
    logout: 'Logout',
    login: 'Login',
    userAccountCenter: 'My Account',
    appstore: 'APP Warehouse',
    appMgmt: 'appMgmt',
    appShare: 'App Share',
    appPush: 'App Promote',
    appPull: 'App Pull',
    externalAppManagement: 'External App Management',
    msgCenter: 'Message Center',
    operAna: 'Operation Analyse',
    detail: 'Detail',
    testTask: 'Test Task',
    atpReport: 'ATPReport',
    atpProcess: 'ATPProcess',
    atpTest: 'ATPTest'
  },
  common: {
    bannerTitle: 'One-step shop for developers',
    bannerWord: 'Provide developers with convenient development plugins to help developers develop and test apps faster',
    type: 'Type',
    video: 'Video',
    game: 'Game',
    VideoSurveilance: 'Video Surveilance',
    AR: 'AR/VR',
    api: 'API',
    sdk: 'SDK',
    MEP: 'MEP',
    Security: 'Security',
    blockchain: 'Blockchain',
    smartDevice: 'SmartDevice',
    IOT: 'Internet of Things',
    bigdata: 'BigData',
    calculate: 'Calculate',
    all: 'All',
    architecture: 'Architecture',
    GPU: 'GPU',
    MEN: 'MEM',
    CPU: 'CPU',
    AI: 'AI',
    industry: 'Industry',
    Smartpark: 'Smart Park',
    supermarket: 'Supermarket',
    industrialManufacturing: 'Industrial Manufacturing',
    logistics: 'Transportation and logistics',
    hydroelectricity: 'Hydroelectricity',
    games: 'Games and competitions',
    openSource: 'Open Source',
    else: 'Else',
    appName: 'App Name',
    version: 'Version',
    size: 'Size',
    provider: 'Provider',
    contact: 'Contact Information',
    operation: 'Operation',
    detail: 'Detail',
    delete: 'Delete',
    cancel: 'Cancel',
    confirm: 'Confirm',
    detect: 'Detect',
    download: 'Download',
    uploadTime: 'UploadTime',
    applicationName: 'Application Name',
    description: 'Description',
    userName: 'Uploder',
    getCaptcha: ' Get Captcha ',
    inputCaptcha: 'Please enter the Captcha code',
    choose: 'Please Choose',
    number: 'number',
    appStoreName: 'App Store name',
    appStoreVersion: 'App Store version',
    company: 'Company',
    url: 'Url',
    appdTransId: 'App Translate Id',
    modifyApp: 'modify',
    pageTotalNum: 'Total',
    noData: 'No Data',
    displaySwitch: 'display switch'
  },
  promptMessage: {
    guestUser: 'The guest user has no right to operate. please log in first!',
    operationFailed: 'The operation failure!',
    getfail: 'Get Failed!',
    modifySuccess: 'Modify the success!',
    modifyFail: 'Modify the failure',
    fileNotSupport: 'The file format does not support!',
    fileEmpty: 'The file is empty content!',
    deleteSuccess: 'Delete the success!',
    fileNotContent: 'The file format does not support  or empty content!',
    canOnlyUpload: 'Can only upload .',
    files: ' files.',
    uploadPicture: 'Can only upload .jpg and .png files.',
    uploadPackageFile: 'You need to upload package file first!',
    uploadIconFile: 'You need to upload icon file or select icon first!',
    industryEmpty: 'Industry cannot be empty',
    typeEmpty: 'Type cannot be empty',
    architectureEmpty: 'Architecture cannot be empty',
    shortDescEmpty: 'Description cannot be empty',
    completedTest: 'You have completed the test, please click to view the report',
    uploadSuccess: 'Upload success!',
    uploadFailed: 'Upload failure!',
    checkName: 'Authentication Failure, please recheck the User Name or Password.',
    repeatEnter: 'The input information is wrong, please re-enter it.',
    userResistedSuccess: 'User is registered successfully!!',
    userResistedFaile: 'Failed to register user',
    deletePrompt: 'This operation will delete the app permanently. Do you want to continue?',
    prompt: 'Prompt',
    checkUploadProgress: 'Check upload progress immediately?',
    browserAdvise: 'For sure some functions work well, please use Chrome',
    userNameIsExists: 'The user name has been registered, please change a new one.',
    phoneNumIsExists: 'The phone number is registered.',
    subCommentFail: 'Comment submission failed.',
    getCommentFail: 'Failed to get comment.',
    getAppFail: 'Failed to get App data.',
    getTaskListFail: 'Failed to get test task.',
    getMyAppFail: 'Failed to get my App data.',
    verifyNamePhoneFail: 'Failed to verify user name or phone number.',
    registerFail: 'Registration failed.',
    getCaptchaSuccess: 'The verification code has been sent to your mobile phone, please check.',
    getCaptchaFail: 'Failed to obtain captcha.',
    confirmLogout: 'Are you sure to log out?',
    subCommentFailReason: 'Rating and content are required',
    contrastTime: 'The submission time cannot be earlier than the test end time!',
    cannotComment: 'You cannot comment twice',
    onlyOneFile: 'Only one file is allowed, please remove the file first!',
    publishSuccess: 'Publish Success',
    createtask: 'Whether to create a test task?',
    createFail: 'Test task check failed',
    testFail: 'The test task failed, please go to view the test report!',
    testAgain: 'Test again',
    testSuccess: 'The test task is successful, please go to view the test report!',
    testRunning: 'The test task is running, please go to check the test progress!',
    testWaiting: 'The test task is waiting to run, please go to check the test progress!',
    testCreated: 'The test task has been created, please go to run the test task!',
    deleteAppStore: 'This operation will permanently delete the external warehouse. Do you want to continue?'
  },
  store: {
    advancedSearch: 'Advanced Search',
    clearAll: 'Delete',
    screening: 'Screening',
    sortBy: 'Sort By',
    most: 'Most',
    name: 'Name',
    score: 'Score',
    appPackageInfo: 'App Package Basic Information',
    createTime: 'Create Time',
    download: 'Download',
    comments: 'Comments',
    introduction: 'Application Details',
    demo: 'Video',
    message: 'Message',
    postComment: 'Post a Comment',
    uploadApp: 'Upload App Package',
    uploadLogo: 'Upload Logo',
    uploadVideo: 'Upload Demo Video',
    appPackage: 'App Package',
    dragPackage: 'Drag App package files here orclick to upload',
    onlyCsar: 'Can only upload .csar files.',
    packageSizeLimit: 'no more than 10M',
    appIcon: 'App Icon',
    appVideo: 'App Video',
    onlyImg: 'Can only upload .jpg and .png files ,or select the default App icon.',
    onlyVideo: 'Can only upload .mp4 files.',
    iconSizeLimit: 'no more than 2M.',
    videoSizeLimit: 'no more than 10M.',
    userName: 'Commentator',
    time: 'Time',
    toBeAdded: 'To be added',
    commentInfo: 'Write your comment and help me grow!',
    noComment: 'There are no comments yet, please leave your first comment!'
  },
  docs: {
    step1: 'Open source MEP platform',
    step1Intr: 'native installation deployment',
    step1Info1: 'Open source personnel access to the MEP platform open source code',
    step1Info2: 'Local installation deployment',
    step1Process: 'Platform select > capability select > toolchain installation/sample code generation',
    step2: 'Development process',
    step2Intr: 'Application development',
    step2Info1: 'Capture platform customization capabilities and integration specifications',
    step2Info2: 'Application development self - test and upload integration test',
    step2Process: 'Develop self - test > application package > integration test',
    step3: 'Open source APP warehouse',
    step3Intr: 'Application of release',
    step3Info1: 'Application release the application can be released to the open source APP repository after the integration test',
    step3Process: 'Application publishing > publishing commercial Store',
    step4: 'MEC management system',
    step4Intr: 'Application deployment',
    step4Info1: 'Applications deployed and put online in the APP warehouse will be released to the shelf of huawei business solutions',
    step4Info2: 'Through the MEC management system, automatically or manually sent to the MEC node',
    step4Process: 'MEC management system',
    updated: 'Updated',
    modify: 'Modify',
    share: 'Share',
    favorite: 'Favorite',
    docs: 'Docs',
    summary: 'summary',
    operateFile: 'new user operate file',
    APPDStandard: 'APP folder standard',
    characteristic: 'characteristic',
    moreDetail: 'start more detail...',
    summaryContent: 'AppStore is an edge application market where developers release and launch App applications. Edge applications developed by the Developer platform can be directly published to the AppStore application store after ATP testing. Users can also upload edge applications directly in the AppStore, and after ATP testing, they can be published to the AppStore for external display.'
  },
  myApp: {
    checkTest: 'View historical test tasks',
    startTime: 'Starting Time',
    reset: 'Reset',
    inquire: 'Inquire',
    version: 'Version',
    endTime: 'End Time',
    operation: 'Operation',
    taskNumber: 'Task Number',
    checkReport: 'Check Report',
    upload: 'Upload',
    appName: 'Application Name',
    status: 'Status',
    test: 'Test',
    publish: 'Publish',
    addApp: 'Add App',
    provider: 'Provider',
    modifyAppStore: 'Edit External Repository'
  },
  report: {
    version: 'Version',
    packageName: 'Package Name',
    startTime: 'Starting Time',
    endTime: 'End Time',
    status: 'Status',
    detail: 'Details',
    ticketNumber: 'Mission ticket number',
    baseInfo: 'Basic Information',
    uploadUser: 'Upload User',
    testReport: 'EdgeGallery test certification report',
    downloadReport: 'Download Report',
    reportanalysis: 'Test report analysis',
    failReason: 'Fail Reason',
    rate: 'Pass rate',
    model: 'Certification template',
    reportDetail: 'Test case details'
  },
  atp: {
    step1: 'Virus Scan',
    step2: 'Compliance Test',
    step3: 'Sandbox Test',
    step4: 'Review',
    testCase: 'Test Case',
    startTest: 'Start Test',
    result: 'ATP Result',
    caseName: 'CaseName',
    caseDetail: 'CaseDetail',
    testReport: 'ATP Report',
    detail: 'detail',
    version: 'Version',
    packageName: 'Package Name',
    startTime: 'Starting Time',
    endTime: 'End Time',
    status: 'Status',
    ticketNumber: 'Mission ticket number',
    baseInfo: 'Basic Information',
    uploadUser: 'Upload User',
    success: 'success',
    failed: 'failed',
    dependencyDetail: 'Dependency Details',
    versionDependency: 'Version Dependency',
    testTask: 'Test task description',
    testItems: 'Test Items',
    caseNumber: 'Number of use cases',
    cancel: 'Cancel',
    confirm: 'Confirm',
    returnList: 'Return to task list',
    security: 'security',
    complianceTest: 'Compliance Test',
    sandboxTest: 'Sandbox Test',
    review: 'Review',
    testCaseManagement: 'Test Case Management',
    fileSize: 'File Size',
    applicationName: 'applicationName',
    appPackage: 'appPackage',
    uploadApp: 'uploadApp',
    onlyCsar: 'Can only upload .csar files.',
    packageSizeLimit: 'no more than 10M'
  },
  apppromotion: {
    number: 'number',
    appName: 'App Name',
    provider: 'Provider',
    version: 'Version',
    tesResult: 'ATP Test Result',
    testRepo: 'Test Result',
    lastProTime: 'Last Pro Time',
    proTimes: 'Promote Times',
    batchPro: 'Batch Push',
    messageType: 'Message Type',
    messagePull: 'pull',
    messagePush: 'push',
    messageNotice: 'notice',
    messageBeDownload: 'download',
    messageUnknow: 'unknow',
    sourceAppStore: 'Source AppStore',
    targetAppStore: 'Target AppStore',
    dateTime: 'Time',
    description: 'Description',
    mesOperation: 'Operation',
    checkDetail: 'detail',
    appPromotion: 'APP Promote',
    operationAna: 'Operation Analyse',
    execute: 'Execute',
    closePanel: 'Close',
    accept: 'accept',
    acceptFailed: 'failed to accept message!',
    getNoticeFailed: 'failedto get Notices!',
    getPromInfoFailed: 'failed to get promote information!',
    getOperatorInfoFailed: 'failed to get operator information!',
    promoteFailed: 'failed to promote app!',
    msgNum: 'Unread Messages',
    checkAllMsg: 'Check All',
    hotIndustry: 'Popular edge app industry distribution',
    pushApp: 'PUSH',
    noticeApp: 'NOTICE',
    totalNum: 'total',
    appDownloadTrend: 'APP download trend chart',
    appPushAndNoticeStatistic: 'APP push statistics',
    quarterly1: 'First season',
    quarterly2: 'Second quarter',
    quarterly3: 'Third quarter',
    quarterly4: 'Fourth quarter',
    viewTestRepo: 'view report',
    intentionAppstore: 'Intention platform',
    acceptSuccess: 'App received successfully, please check or publish in "My App"',
    deleteMsgSuccess: 'msg delete success',
    deleteMsgFailed: 'msg delete failed',
    deleteMsgTip: 'click to delete message',
    acceptMsgTip: 'click to accept message',
    targetPaltform: 'select an intended platform',
    selectAll: 'select all',
    nameCheck: 'platform name can not be null',
    versionCheck: 'platform version can not be null',
    companyCheck: 'company can not be null',
    addrCheck: 'URL can not be null',
    appdCheck: 'APPD transducer can not be null',
    descriptionCheck: 'description can not be null',
    haveNoAnaData: 'No operation analyse data!'
  },
  messageCenter: {
    msgToday: 'Today',
    msgWeek: 'This Week',
    msgMonth: 'This Month',
    msgOld: 'Old',
    acceptMsg: 'accept',
    deleteMsg: 'delete',
    appBasicInfo: 'APP Basic Information',
    appLabel: 'label',
    appStruct: 'struct',
    appProvider: 'provider',
    appAffinity: 'affinity',
    appVersion: 'version',
    appShortDes: 'description',
    appIndustry: 'industry',
    appTestRepo: 'APP Test Repo',
    appTestPlatform: 'test platform',
    atpTestPlatform: 'ATP test platform',
    atpTestStatus: 'test status',
    testRepoDescription: 'report details',
    appType: 'type',
    otherInfo: 'Other Information',
    sourceAppStore: 'source',
    targetAppStore: 'target',
    operationType: 'operation',
    unReadedMsg: 'unReaded',
    readedMsg: 'readed',
    allMsg: 'all messages',
    appStoreName: 'AppStore Name',
    testRepoKey: 'test report',
    clickToCheckRepo: 'click to view!',
    updateMsgFailed: 'update message status failed'
  },
  appPull: {
    name: 'app name',
    provider: 'provider',
    version: 'version',
    testRepo: 'test report',
    appIndustry: 'industry',
    appType: '类型',
    appCreateTime: '创建时间',
    operation: 'operation',
    pull: 'pull',
    batchPull: 'Batch Pull',
    closeDlg: 'close',
    pullAppResult: 'Pull Result',
    result: 'result',
    pullException: 'pull exception',
    pullSuccess: 'pull success',
    getAppStoreException: 'get appStore Exception',
    getPullAppException: 'get pull App Exception',
    viewTestRepo: 'view report',
    haveNoPullData: 'No data is pulled'
  },
  about: {
  },
  ...enLocale
}
export default en
